(1
 (ace-window .
	     [(0 9 0)
	      ((avy
		(0 2 0)))
	      "Quickly switch windows." single
	      ((:authors
		("Oleh Krehel" . "ohwoeowho@gmail.com"))
	       (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	       (:keywords "window" "location")
	       (:url . "https://github.com/abo-abo/ace-window"))])
 (ack .
      [(1 8)
       nil "interface to ack-like tools" tar
       ((:url . "https://github.com/leoliu/ack-el")
	(:keywords "tools" "processes" "convenience")
	(:maintainer "João Távora" . "joaotavora@gmail.com")
	(:authors
	 ("Leo Liu" . "sdl.web@gmail.com")))])
 (ada-mode .
	   [(6 2 1)
	    ((uniquify-files
	      (1 0 1))
	     (wisi
	      (2 2 1))
	     (emacs
	      (25 0)))
	    "major-mode for editing Ada sources" tar
	    ((:url . "http://www.nongnu.org/ada-mode/")
	     (:keywords "languages" "ada")
	     (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
	     (:authors
	      ("Stephen Leake" . "stephen_leake@stephe-leake.org")))])
 (ada-ref-man .
	      [(2012 5)
	       nil "Ada Reference Manual 2012" tar
	       ((:url . "http://stephe-leake.org/ada/arm.html")
		(:keywords "languages" "ada")
		(:maintainer "Stephen Leake" . "stephen_leake@member.fsf.org")
		(:authors
		 ("Stephen Leake" . "stephen_leake@member.fsf.org")))])
 (adaptive-wrap .
		[(0 7)
		 nil "Smart line-wrapping with wrap-prefix" single
		 ((:url . "http://elpa.gnu.org/packages/adaptive-wrap.html")
		  (:authors
		   ("Stephen Berman" . "stephen.berman@gmx.net")
		   ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		  (:maintainer "Stephen Berman" . "stephen.berman@gmx.net"))])
 (adjust-parens .
		[(3 1)
		 nil "Indent and dedent Lisp code, automatically adjust close parens" tar
		 ((:maintainer "Barry O'Reilly" . "gundaetiapo@gmail.com")
		  (:authors
		   ("Barry O'Reilly" . "gundaetiapo@gmail.com"))
		  (:url . "http://elpa.gnu.org/packages/adjust-parens.html"))])
 (advice-patch .
	       [(0 1)
		((emacs
		  (24 4)))
		"Use patches to advise the inside of functions" single
		((:url . "http://elpa.gnu.org/packages/advice-patch.html")
		 (:authors
		  ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		 (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (aggressive-indent .
		    [(1 8 3)
		     ((emacs
		       (24 1))
		      (cl-lib
		       (0 5)))
		     "Minor mode to aggressively keep your code always indented" single
		     ((:authors
		       ("Artur Malabarba" . "emacs@endlessparentheses.com"))
		      (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
		      (:keywords "indent" "lisp" "maint" "tools")
		      (:url . "https://github.com/Malabarba/aggressive-indent-mode"))])
 (ahungry-theme .
		[(1 10 0)
		 ((emacs
		   (24)))
		 "Ahungry color theme for Emacs.  Make sure to (load-theme 'ahungry)." tar
		 ((:url . "https://github.com/ahungry/color-theme-ahungry")
		  (:keywords "ahungry" "palette" "color" "theme" "emacs" "color-theme" "deftheme")
		  (:maintainer "Matthew Carter" . "m@ahungry.com")
		  (:authors
		   ("Matthew Carter" . "m@ahungry.com")))])
 (all .
      [(1 0)
       nil "Edit all lines matching a given regexp" single
       ((:url . "http://elpa.gnu.org/packages/all.html")
	(:authors
	 ("Per Abrahamsen" . "abraham@dina.kvl.dk"))
	(:maintainer "Per Abrahamsen" . "abraham@dina.kvl.dk")
	(:keywords "matching"))])
 (ampc .
       [(0 2)
	nil "Asynchronous Music Player Controller" single
	((:url . "http://elpa.gnu.org/packages/ampc.html")
	 (:authors
	  ("Christopher Schmidt" . "christopher@ch.ristopher.com"))
	 (:maintainer nil . "emacs-devel@gnu.org")
	 (:keywords "ampc" "mpc" "mpd"))])
 (arbitools .
	    [(0 977)
	     ((cl-lib
	       (0 5)))
	     "Package for chess tournaments administration" single
	     ((:url . "http://elpa.gnu.org/packages/arbitools.html")
	      (:authors
	       ("David Gonzalez Gandara" . "dggandara@member.fsf.org"))
	      (:maintainer "David Gonzalez Gandara" . "dggandara@member.fsf.org"))])
 (ascii-art-to-unicode .
		       [(1 12)
			nil "a small artist adjunct" single
			((:authors
			  ("Thien-Thi Nguyen" . "ttn@gnu.org"))
			 (:maintainer "Thien-Thi Nguyen" . "ttn@gnu.org")
			 (:keywords "ascii" "unicode" "box-drawing")
			 (:url . "http://www.gnuvola.org/software/aa2u/"))])
 (async .
	[(1 9 2)
	 ((cl-lib
	   (0 5))
	  (nadvice
	   (0 3)))
	 "Asynchronous processing in Emacs" tar
	 ((:url . "https://github.com/jwiegley/emacs-async")
	  (:keywords "async")
	  (:maintainer "John Wiegley" . "jwiegley@gmail.com")
	  (:authors
	   ("John Wiegley" . "jwiegley@gmail.com")))])
 (auctex .
	 [(12 1 2)
	  ((emacs
	    (24 1))
	   (cl-lib
	    (0 5)))
	  "Integrated environment for *TeX*" tar
	  ((:url . "http://www.gnu.org/software/auctex/")
	   (:keywords "tex" "latex" "texinfo" "context" "doctex" "preview-latex")
	   (:maintainer nil . "auctex-devel@gnu.org"))])
 (aumix-mode .
	     [(7)
	      nil "run the aumix program in a buffer" single
	      ((:authors
		("Kevin Ryde" . "user42_kevin@yahoo.com.au"))
	       (:maintainer "Kevin Ryde" . "user42_kevin@yahoo.com.au")
	       (:keywords "multimedia" "mixer" "aumix")
	       (:url . "http://user42.tuxfamily.org/aumix-mode/index.html"))])
 (auto-correct .
	       [(1 1 4)
		nil "Remembers and automatically fixes past corrections" single
		((:url . "http://elpa.gnu.org/packages/auto-correct.html")
		 (:authors
		  ("Ian Dunn" . "dunni@gnu.org"))
		 (:maintainer "Ian Dunn" . "dunni@gnu.org")
		 (:keywords "editing"))])
 (auto-overlays .
		[(0 10 9)
		 nil "Automatic regexp-delimited overlays" tar
		 ((:url . "http://www.dr-qubit.org/emacs.php")
		  (:keywords "extensions")
		  (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
		  (:authors
		   ("Toby Cubitt" . "toby-predictive@dr-qubit.org")))])
 (avy .
      [(0 5 0)
       ((emacs
	 (24 1))
	(cl-lib
	 (0 5)))
       "Jump to arbitrary positions in visible text and select text quickly." tar
       ((:url . "https://github.com/abo-abo/avy")
	(:keywords "point" "location")
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com")))])
 (bbdb .
       [(3 2)
	((emacs
	  (24)))
	"core of BBDB" tar
	((:maintainer "Roland Winkler" . "winkler@gnu.org")
	 (:url . "http://elpa.gnu.org/packages/bbdb.html"))])
 (beacon .
	 [(1 3 3)
	  ((seq
	    (2 14)))
	  "Highlight the cursor whenever the window scrolls" single
	  ((:authors
	    ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	   (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	   (:keywords "convenience")
	   (:url . "https://github.com/Malabarba/beacon"))])
 (bnf-mode .
	   [(0 4 2)
	    ((cl-lib
	      (0 5))
	     (emacs
	      (24 3)))
	    "Major mode for editing BNF grammars." tar
	    ((:url . "https://github.com/sergeyklay/bnf-mode")
	     (:keywords "languages")
	     (:maintainer "Serghei Iakovlev" . "sadhooklay@gmail.com")
	     (:authors
	      ("Serghei Iakovlev" . "sadhooklay@gmail.com")))])
 (brief .
	[(5 87)
	 nil "Brief Editor Emulator (Brief Mode)" tar
	 ((:keywords "brief" "emulations" "crisp")
	  (:maintainer "Luke Lee" . "luke.yx.lee@gmail.com")
	  (:authors
	   ("Luke Lee" . "luke.yx.lee@gmail.com"))
	  (:url . "http://elpa.gnu.org/packages/brief.html"))])
 (buffer-expose .
		[(0 4 3)
		 ((emacs
		   (25))
		  (cl-lib
		   (0 5)))
		 "Visual buffer switching using a window grid" single
		 ((:authors
		   ("Clemens Radermacher" . "clemera@posteo.net"))
		  (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
		  (:keywords "convenience")
		  (:url . "https://github.com/clemera/buffer-expose"))])
 (bug-hunter .
	     [(1 3 1)
	      ((seq
		(1 3))
	       (cl-lib
		(0 5)))
	      "Hunt down errors by bisecting elisp files" single
	      ((:authors
		("Artur Malabarba" . "emacs@endlessparentheses.com"))
	       (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	       (:keywords "lisp")
	       (:url . "https://github.com/Malabarba/elisp-bug-hunter"))])
 (caps-lock .
	    [(1 0)
	     nil "Caps-lock as a minor mode" single
	     ((:url . "http://elpa.gnu.org/packages/caps-lock.html")
	      (:authors
	       ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	      (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (captain .
	  [(1 0 3)
	   nil "CAPiTalization is Automatic IN emacs" single
	   ((:url . "http://elpa.gnu.org/packages/captain.html")
	    (:authors
	     ("Ian Dunn" . "dunni@gnu.org"))
	    (:maintainer "Ian Dunn" . "dunni@gnu.org")
	    (:keywords "editing"))])
 (chess .
	[(2 0 4)
	 ((cl-lib
	   (0 5)))
	 "Play chess in GNU Emacs" tar
	 ((:keywords "games")
	  (:maintainer "Mario Lang" . "mlang@delysid.org")
	  (:authors
	   ("John Wiegley" . "johnw@gnu.org"))
	  (:url . "http://elpa.gnu.org/packages/chess.html"))])
 (cl-generic .
	     [(0 3)
	      nil "Forward cl-generic compatibility for Emacs<25" single
	      ((:url . "http://elpa.gnu.org/packages/cl-generic.html")
	       (:authors
		("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	       (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (cl-lib .
	 [(0 6 1)
	  nil "Forward cl-lib compatibility library for Emacs<24.3" single
	  ((:url . "http://elpa.gnu.org/packages/cl-lib.html")
	   (:authors
	    ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	   (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (cl-print .
	   [(1 0)
	    ((emacs
	      (25)))
	    "CL-style generic printing" single
	    ((:url . "http://elpa.gnu.org/packages/cl-print.html")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (clipboard-collector .
		      [(0 2)
		       ((emacs
			 (25)))
		       "Collect clipboard entries according to regex rules" single
		       ((:authors
			 ("Clemens Radermacher" . "clemera@posteo.net"))
			(:maintainer "Clemens Radermacher" . "clemera@posteo.net")
			(:keywords "convenience")
			(:url . "https://github.com/clemera/clipboard-collector"))])
 (cobol-mode .
	     [(1 0 0)
	      ((cl-lib
		(0 5)))
	      "Mode for editing COBOL code" single
	      ((:url . "http://elpa.gnu.org/packages/cobol-mode.html")
	       (:authors
		("Edward Hart" . "edward.dan.hart@gmail.com"))
	       (:maintainer "Edward Hart" . "edward.dan.hart@gmail.com")
	       (:keywords "languages"))])
 (coffee-mode .
	      [(0 4 1 1)
	       nil "Major mode for CoffeeScript files" single
	       ((:authors
		 ("Chris Wanstrath" . "chris@ozmm.org"))
		(:maintainer "Chris Wanstrath" . "chris@ozmm.org")
		(:keywords "coffeescript" "major" "mode")
		(:url . "http://github.com/defunkt/coffee-mode"))])
 (compact-docstrings .
		     [(0 1)
		      nil "Shrink blank lines in docstrings and doc comments" single
		      ((:authors
			("Clément Pit-Claudel" . "clement.pitclaudel@live.com"))
		       (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com")
		       (:keywords "convenience" "faces" "lisp" "maint" "c")
		       (:url . "https://github.com/cpitclaudel/compact-docstrings"))])
 (company .
	  [(0 9 10)
	   ((emacs
	     (24 3)))
	   "Modular text completion framework" tar
	   ((:url . "http://company-mode.github.io/")
	    (:keywords "abbrev" "convenience" "matching")
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:authors
	     ("Nikolaj Schumacher")))])
 (company-ebdb .
	       [(1 1)
		((company
		  (0 9 4))
		 (ebdb
		  (0 2)))
		"company-mode completion backend for EBDB in message-mode" single
		((:url . "http://elpa.gnu.org/packages/company-ebdb.html")
		 (:authors
		  ("Jan Tatarik" . "jan.tatarik@gmail.com"))
		 (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net"))])
 (company-math .
	       [(1 3)
		((company
		  (0 8 0))
		 (math-symbol-lists
		  (1 2)))
		"Completion backends for unicode math symbols and latex tags" tar
		((:url . "https://github.com/vspinu/company-math")
		 (:keywords "unicode" "symbols" "completion")
		 (:maintainer "Vitalie Spinu" . "spinuvit@gmail.com")
		 (:authors
		  ("Vitalie Spinu" . "spinuvit@gmail.com")))])
 (company-statistics .
		     [(0 2 3)
		      ((emacs
			(24 3))
		       (company
			(0 8 5)))
		      "Sort candidates using completion history" tar
		      ((:url . "https://github.com/company-mode/company-statistics")
		       (:keywords "abbrev" "convenience" "matching")
		       (:maintainer "Ingo Lohmar" . "i.lohmar@gmail.com")
		       (:authors
			("Ingo Lohmar" . "i.lohmar@gmail.com")))])
 (context-coloring .
		   [(8 1 0)
		    ((emacs
		      (24 3)))
		    "Highlight by scope" tar
		    ((:url . "https://github.com/jacksonrayhamilton/context-coloring")
		     (:keywords "convenience" "faces" "tools")
		     (:maintainer "Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com")
		     (:authors
		      ("Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com")))])
 (crisp .
	[(1 3 6)
	 nil "CRiSP/Brief Emacs emulator" single
	 ((:url . "http://elpa.gnu.org/packages/crisp.html")
	  (:authors
	   ("Gary D. Foster" . "Gary.Foster@Corp.Sun.COM"))
	  (:maintainer "Luke Lee" . "luke.yx.lee@gmail.com")
	  (:keywords "emulations" "brief" "crisp"))])
 (csv-mode .
	   [(1 7)
	    nil "Major mode for editing comma/char separated values" single
	    ((:url . "http://elpa.gnu.org/packages/csv-mode.html")
	     (:authors
	      ("\"Francis J. Wright\"" . "F.J.Wright@qmul.ac.uk"))
	     (:maintainer "\"Francis J. Wright\"" . "F.J.Wright@qmul.ac.uk")
	     (:keywords "convenience"))])
 (cycle-quotes .
	       [(0 1)
		nil "Cycle between quote styles" tar
		((:keywords "convenience")
		 (:maintainer "Simen Heggestøyl" . "simenheg@gmail.com")
		 (:authors
		  ("Simen Heggestøyl" . "simenheg@gmail.com"))
		 (:url . "http://elpa.gnu.org/packages/cycle-quotes.html"))])
 (darkroom .
	   [(0 2)
	    ((cl-lib
	      (0 5)))
	    "Remove visual distractions and focus on writing" single
	    ((:url . "http://elpa.gnu.org/packages/darkroom.html")
	     (:authors
	      ("João Távora" . "joaotavora@gmail.com"))
	     (:maintainer "João Távora" . "joaotavora@gmail.com")
	     (:keywords "convenience" "emulations"))])
 (dash .
       [(2 12 0)
	nil "A modern list library for Emacs" tar
	((:keywords "lists")
	 (:maintainer "Magnar Sveen" . "magnars@gmail.com")
	 (:authors
	  ("Magnar Sveen" . "magnars@gmail.com"))
	 (:url . "http://elpa.gnu.org/packages/dash.html"))])
 (dbus-codegen .
	       [(0 1)
		((cl-lib
		  (0 5)))
		"Lisp code generation for D-Bus." single
		((:url . "http://elpa.gnu.org/packages/dbus-codegen.html")
		 (:authors
		  ("Daiki Ueno" . "ueno@gnu.org"))
		 (:maintainer nil . "emacs-devel@gnu.org")
		 (:keywords "comm" "dbus" "convenience"))])
 (debbugs .
	  [(0 19)
	   ((emacs
	     (25 1))
	    (soap-client
	     (3 1 5))
	    (cl-lib
	     (0 5)))
	   "SOAP library to access debbugs servers" tar
	   ((:keywords "comm" "hypermedia")
	    (:maintainer "Michael Albinus" . "michael.albinus@gmx.de")
	    (:authors
	     ("Michael Albinus" . "michael.albinus@gmx.de"))
	    (:url . "http://elpa.gnu.org/packages/debbugs.html"))])
 (delight .
	  [(1 5)
	   ((cl-lib
	     (0 5))
	    (nadvice
	     (0 3)))
	   "A dimmer switch for your lighter text" single
	   ((:authors
	     ("Phil Sainty" . "psainty@orcon.net.nz"))
	    (:maintainer "Phil Sainty" . "psainty@orcon.net.nz")
	    (:keywords "convenience")
	    (:url . "https://savannah.nongnu.org/projects/delight"))])
 (dict-tree .
	    [(0 14)
	     ((trie
	       (0 3))
	      (tNFA
	       (0 1 1))
	      (heap
	       (0 3)))
	     "Dictionary data structure" single
	     ((:authors
	       ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	      (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	      (:keywords "extensions" "matching" "data structures trie" "tree" "dictionary" "completion" "regexp")
	      (:url . "http://www.dr-qubit.org/emacs.php"))])
 (diff-hl .
	  [(1 8 7)
	   ((cl-lib
	     (0 2))
	    (emacs
	     (24 3)))
	   "Highlight uncommitted changes using VC" tar
	   ((:url . "https://github.com/dgutov/diff-hl")
	    (:keywords "vc" "diff")
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:authors
	     ("Dmitry Gutov" . "dgutov@yandex.ru")))])
 (diffview .
	   [(1 0)
	    nil "View diffs in side-by-side format" single
	    ((:authors
	      ("Mitchel Humpherys" . "mitch.special@gmail.com"))
	     (:maintainer "Mitchel Humpherys" . "mitch.special@gmail.com")
	     (:keywords "convenience" "diff")
	     (:url . "https://github.com/mgalgs/diffview-mode"))])
 (dired-du .
	   [(0 5 2)
	    ((emacs
	      (24 4))
	     (cl-lib
	      (0 5)))
	    "Dired with recursive directory sizes" tar
	    ((:keywords "files" "unix" "convenience")
	     (:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
	     (:authors
	      ("Tino Calancha" . "tino.calancha@gmail.com"))
	     (:url . "http://elpa.gnu.org/packages/dired-du.html"))])
 (dired-git-info .
		 [(0 2)
		  ((emacs
		    (25)))
		  "Show git info in dired" single
		  ((:authors
		    ("Clemens Radermacher" . "clemera@posteo.net"))
		   (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
		   (:keywords "dired" "files")
		   (:url . "https://github.com/clemera/dired-git-info"))])
 (disk-usage .
	     [(1 3 3)
	      ((emacs
		(26 1)))
	      "Sort and browse disk usage listings" single
	      ((:authors
		("Pierre Neidhardt" . "mail@ambrevar.xyz"))
	       (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz")
	       (:keywords "files" "convenience" "tools")
	       (:url . "https://gitlab.com/Ambrevar/emacs-disk-usage"))])
 (djvu .
       [(1 1)
	nil "Edit and view Djvu files via djvused" single
	((:url . "http://elpa.gnu.org/packages/djvu.html")
	 (:authors
	  ("Roland Winkler" . "winkler@gnu.org"))
	 (:maintainer "Roland Winkler" . "winkler@gnu.org")
	 (:keywords "files" "wp"))])
 (docbook .
	  [(0 1)
	   nil "Info-like viewer for DocBook" single
	   ((:url . "http://elpa.gnu.org/packages/docbook.html")
	    (:authors
	     ("Chong Yidong" . "cyd@gnu.org"))
	    (:maintainer "Chong Yidong" . "cyd@gnu.org")
	    (:keywords "docs" "help"))])
 (dts-mode .
	   [(0 1 0)
	    nil "Major mode for Device Tree source files" single
	    ((:url . "http://elpa.gnu.org/packages/dts-mode.html")
	     (:authors
	      ("Ben Gamari" . "ben@smart-cactus.org"))
	     (:maintainer "Ben Gamari" . "ben@smart-cactus.org")
	     (:keywords "languages"))])
 (easy-kill .
	    [(0 9 3)
	     ((emacs
	       (24))
	      (cl-lib
	       (0 5)))
	     "kill & mark things easily" tar
	     ((:url . "https://github.com/leoliu/easy-kill")
	      (:keywords "killing" "convenience")
	      (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	      (:authors
	       ("Leo Liu" . "sdl.web@gmail.com")))])
 (ebdb .
       [(0 6 11)
	((emacs
	  (25 1))
	 (cl-lib
	  (0 5))
	 (seq
	  (2 15)))
	"Contact management package" tar
	((:url . "https://github.com/girzel/ebdb")
	 (:keywords "convenience" "mail")
	 (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
	 (:authors
	  ("Eric Abrahamsen" . "eric@ericabrahamsen.net")))])
 (ebdb-gnorb .
	     [(1 0 2)
	      ((gnorb
		(1 1 0))
	       (ebdb
		(0 2)))
	      "Utilities for connecting EBDB to Gnorb" single
	      ((:url . "http://elpa.gnu.org/packages/ebdb-gnorb.html")
	       (:authors
		("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
	       (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net"))])
 (ebdb-i18n-chn .
		[(1 3)
		 ((pyim
		   (1 6 0))
		  (ebdb
		   (0 2)))
		 "China-specific internationalization support for EBDB" single
		 ((:url . "http://elpa.gnu.org/packages/ebdb-i18n-chn.html")
		  (:authors
		   ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
		  (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net"))])
 (ediprolog .
	    [(1 2)
	     nil "Emacs Does Interactive Prolog" single
	     ((:authors
	       ("Markus Triska" . "triska@metalevel.at"))
	      (:maintainer "Markus Triska" . "triska@metalevel.at")
	      (:keywords "languages" "processes")
	      (:url . "https://www.metalevel.at/ediprolog/"))])
 (eev .
      [(20190517)
       ((emacs
	 (24 1)))
       "Support for e-scripts (eepitch blocks, elisp hyperlinks, etc)" tar
       ((:url . "http://angg.twu.net/#eev")
	(:keywords "lisp" "e-scripts")
	(:maintainer "Eduardo Ochs" . "eduardoochs@gmail.com")
	(:authors
	 ("Eduardo Ochs" . "eduardoochs@gmail.com")))])
 (eglot .
	[(1 4)
	 ((emacs
	   (26 1))
	  (jsonrpc
	   (1 0 7))
	  (flymake
	   (1 0 2)))
	 "Client for Language Server Protocol (LSP) servers" tar
	 ((:url . "https://github.com/joaotavora/eglot")
	  (:keywords "convenience" "languages")
	  (:maintainer "João Távora" . "joaotavora@gmail.com")
	  (:authors
	   ("João Távora" . "joaotavora@gmail.com")))])
 (el-search .
	    [(1 12 6 1)
	     ((emacs
	       (25))
	      (stream
	       (2 2 4))
	      (cl-print
	       (1 0)))
	     "Expression based interactive search for Emacs Lisp" tar
	     ((:keywords "lisp")
	      (:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de")
	      (:authors
	       ("Michael Heerdegen" . "michael_heerdegen@web.de"))
	      (:url . "http://elpa.gnu.org/packages/el-search.html"))])
 (eldoc-eval .
	     [(0 1)
	      nil "Enable eldoc support when minibuffer is in use." single
	      ((:url . "http://elpa.gnu.org/packages/eldoc-eval.html")
	       (:authors
		("Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))
	       (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (electric-spacing .
		   [(5 0)
		    nil "Insert operators with surrounding spaces smartly" single
		    ((:url . "http://elpa.gnu.org/packages/electric-spacing.html")
		     (:authors
		      ("William Xu" . "william.xwl@gmail.com"))
		     (:maintainer "William Xu" . "william.xwl@gmail.com"))])
 (enwc .
       [(2 0)
	((emacs
	  (25 1)))
	"The Emacs Network Client" tar
	((:url . "https://savannah.nongnu.org/p/enwc")
	 (:keywords "external" "network" "wicd" "manager" "nm")
	 (:maintainer "Ian Dunn" . "dunni@gnu.org")
	 (:authors
	  ("Ian Dunn" . "dunni@gnu.org")))])
 (epoch-view .
	     [(0 0 1)
	      nil "Minor mode to visualize epoch timestamps" single
	      ((:url . "http://elpa.gnu.org/packages/epoch-view.html")
	       (:authors
		("Ted Zlatanov" . "tzz@lifelogs.com"))
	       (:maintainer "Ted Zlatanov" . "tzz@lifelogs.com")
	       (:keywords "data" "timestamp" "epoch" "unix"))])
 (ergoemacs-mode .
		 [(5 16 10 12)
		  ((emacs
		    (24 1))
		   (undo-tree
		    (0 6 5))
		   (cl-lib
		    (0 5)))
		  "Emacs mode based on common modern interface and ergonomics." tar
		  ((:url . "https://github.com/ergoemacs/ergoemacs-mode")
		   (:keywords "convenience")
		   (:maintainer "Matthew L. Fidler" . "matthew.fidler@gmail.com")
		   (:authors
		    ("Xah Lee" . "xah@xahlee.org")
		    ("David Capello" . "davidcapello@gmail.com")
		    ("Matthew L. Fidler" . "matthew.fidler@gmail.com")))])
 (excorporate .
	      [(0 8 3)
	       ((emacs
		 (24 1))
		(fsm
		 (0 2 1))
		(soap-client
		 (3 1 5))
		(url-http-ntlm
		 (2 0 4))
		(nadvice
		 (0 3)))
	       "Exchange Web Services (EWS) integration" tar
	       ((:url . "https://www.fitzsim.org/blog/")
		(:keywords "calendar")
		(:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org")
		(:authors
		 ("Thomas Fitzsimmons" . "fitzsim@fitzsim.org")))])
 (exwm .
       [(0 22 1)
	((xelb
	  (0 16)))
	"Emacs X Window Manager" tar
	((:url . "https://github.com/ch11ng/exwm")
	 (:keywords "unix")
	 (:maintainer "Chris Feng" . "chris.w.feng@gmail.com")
	 (:authors
	  ("Chris Feng" . "chris.w.feng@gmail.com")))])
 (f90-interface-browser .
			[(1 1)
			 nil "Parse and browse f90 interfaces" single
			 ((:authors
			   ("Lawrence Mitchell" . "wence@gmx.li"))
			  (:maintainer "Lawrence Mitchell" . "wence@gmx.li")
			  (:url . "http://github.com/wence-/f90-iface/"))])
 (filladapt .
	    [(2 12 2)
	     ((emacs
	       (24 4)))
	     "Adaptive fill" single
	     ((:url . "http://elpa.gnu.org/packages/filladapt.html")
	      (:authors
	       ("Kyle E. Jones" . "kyle_jones@wonderworks.com"))
	      (:maintainer nil . "emacs-devel@gnu.org"))])
 (flylisp .
	  [(0 2)
	   ((emacs
	     (24 1))
	    (cl-lib
	     (0 4)))
	   "Color unbalanced parentheses and parentheses inconsistent with indentation" single
	   ((:url . "http://elpa.gnu.org/packages/flylisp.html")
	    (:authors
	     ("Barry O'Reilly" . "gundaetiapo@gmail.com"))
	    (:maintainer "Barry O'Reilly" . "gundaetiapo@gmail.com"))])
 (flymake .
	  [(1 0 8)
	   ((emacs
	     (26 1)))
	   "A universal on-the-fly syntax checker" single
	   ((:url . "http://elpa.gnu.org/packages/flymake.html")
	    (:authors
	     ("Pavel Kobyakov" . "pk_at_work@yahoo.com"))
	    (:maintainer "João Távora" . "joaotavora@gmail.com")
	    (:keywords "c" "languages" "tools"))])
 (fountain-mode .
		[(2 7 3)
		 ((emacs
		   (24 5)))
		 "Major mode for screenwriting in Fountain markup" single
		 ((:authors
		   ("Paul W. Rankin" . "pwr@sdf.org"))
		  (:maintainer "Paul W. Rankin" . "pwr@sdf.org")
		  (:keywords "wp" "text")
		  (:url . "https://fountain-mode.org"))])
 (frame-tabs .
	     [(1 1)
	      nil "show buffer tabs in side window" single
	      ((:url . "http://elpa.gnu.org/packages/frame-tabs.html")
	       (:authors
		("Martin Rudalics" . "rudalics@gmx.at"))
	       (:maintainer "Martin Rudalics" . "rudalics@gmx.at")
	       (:keywords "frames" "tabs"))])
 (frog-menu .
	    [(0 2 8)
	     ((emacs
	       (26))
	      (avy
	       (0 4))
	      (posframe
	       (0 4)))
	     "Quickly pick items from ad hoc menus" single
	     ((:authors
	       ("Clemens Radermacher" . "clemera@posteo.net"))
	      (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
	      (:keywords "convenience")
	      (:url . "https://github.com/clemera/frog-menu"))])
 (fsm .
      [(0 2 1)
       ((emacs
	 (24 1))
	(cl-lib
	 (0 5)))
       "state machine library" single
       ((:url . "http://elpa.gnu.org/packages/fsm.html")
	(:authors
	 ("Magnus Henoch" . "magnus.henoch@gmail.com"))
	(:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org")
	(:keywords "extensions"))])
 (ggtags .
	 [(0 8 13)
	  ((emacs
	    (24))
	   (cl-lib
	    (0 5)))
	  "emacs frontend to GNU Global source code tagging system" single
	  ((:authors
	    ("Leo Liu" . "sdl.web@gmail.com"))
	   (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	   (:keywords "tools" "convenience")
	   (:url . "https://github.com/leoliu/ggtags"))])
 (gited .
	[(0 5 4)
	 ((emacs
	   (24 4))
	  (cl-lib
	   (0 5)))
	 "Operate on Git branches like dired" tar
	 ((:keywords "git" "vc" "convenience")
	  (:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
	  (:authors
	   ("Tino Calancha" . "tino.calancha@gmail.com"))
	  (:url . "http://elpa.gnu.org/packages/gited.html"))])
 (gle-mode .
	   [(1 1)
	    ((cl-lib
	      (0 5)))
	    "Major mode to edit Graphics Layout Engine files" single
	    ((:url . "http://elpa.gnu.org/packages/gle-mode.html")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (gnome-c-style .
		[(0 1)
		 nil "minor mode for editing GNOME-style C source code" tar
		 ((:keywords "gnome" "c" "coding style")
		  (:maintainer "Daiki Ueno" . "ueno@gnu.org")
		  (:authors
		   ("Daiki Ueno" . "ueno@gnu.org"))
		  (:url . "http://elpa.gnu.org/packages/gnome-c-style.html"))])
 (gnorb .
	[(1 6 1)
	 ((cl-lib
	   (0 5)))
	 "Glue code between Gnus, Org, and BBDB" tar
	 ((:keywords "mail" "org" "gnus" "bbdb" "todo" "task")
	  (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
	  (:authors
	   ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
	  (:url . "http://elpa.gnu.org/packages/gnorb.html"))])
 (gnu-elpa-keyring-update .
			  [(2019 3)
			   nil "Update Emacs's GPG keyring for GNU ELPA" tar
			   ((:keywords "maint" "tools")
			    (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
			    (:authors
			     ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
			    (:url . "http://elpa.gnu.org/packages/gnu-elpa-keyring-update.html"))])
 (gnugo .
	[(3 1 0)
	 ((ascii-art-to-unicode
	   (1 5))
	  (xpm
	   (1 0 1))
	  (cl-lib
	   (0 5)))
	 "play GNU Go in a buffer" tar
	 ((:url . "http://www.gnuvola.org/software/gnugo/")
	  (:keywords "games" "processes")
	  (:maintainer "Thien-Thi Nguyen" . "ttn@gnu.org")
	  (:authors
	   ("Thien-Thi Nguyen" . "ttn@gnu.org")))])
 (gnus-mock .
	    [(0 4 2)
	     nil "Mock Gnus installation for testing" tar
	     ((:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
	      (:authors
	       ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
	      (:url . "http://elpa.gnu.org/packages/gnus-mock.html"))])
 (guess-language .
		 [(0 0 1)
		  ((cl-lib
		    (0 5))
		   (emacs
		    (24))
		   (nadvice
		    (0 1)))
		  "Robust automatic language detection" single
		  ((:authors
		    ("Titus von der Malsburg" . "malsburg@posteo.de"))
		   (:maintainer "Titus von der Malsburg" . "malsburg@posteo.de")
		   (:url . "https://github.com/tmalsburg/guess-language.el"))])
 (heap .
       [(0 5)
	nil "Heap (a.k.a. priority queue) data structure" single
	((:authors
	  ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	 (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	 (:keywords "extensions" "data structures" "heap" "priority queue")
	 (:url . "http://www.dr-qubit.org/emacs.php"))])
 (highlight-escape-sequences .
			     [(0 4)
			      nil "Highlight escape sequences" single
			      ((:authors
				("Dmitry Gutov" . "dgutov@yandex.ru")
				("Pavel Matcula" . "dev.plvlml@gmail.com"))
			       (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
			       (:keywords "convenience")
			       (:url . "https://github.com/dgutov/highlight-escape-sequences"))])
 (hook-helpers .
	       [(1 1 1)
		((emacs
		  (25 1)))
		"Anonymous, modifiable hook functions" tar
		((:url . "https://savannah.nongnu.org/projects/hook-helpers-el/")
		 (:keywords "development" "hooks")
		 (:maintainer "Ian Dunn" . "dunni@gnu.org")
		 (:authors
		  ("Ian Dunn" . "dunni@gnu.org")))])
 (html5-schema .
	       [(0 1)
		nil "Add HTML5 schemas for use by nXML" tar
		((:url . "https://github.com/validator/validator")
		 (:keywords "html" "xml")
		 (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
		 (:authors
		  ("Stefan Monnier" . "monnier@iro.umontreal.ca")))])
 (hydra .
	[(0 14 0)
	 ((cl-lib
	   (0 5)))
	 "Make bindings that stick around." tar
	 ((:url . "https://github.com/abo-abo/hydra")
	  (:keywords "bindings")
	  (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	  (:authors
	   ("Oleh Krehel" . "ohwoeowho@gmail.com")))])
 (hyperbole .
	    [(7 0 3)
	     ((emacs
	       (24 4)))
	     "GNU Hyperbole: The Everyday Hypertextual Information Manager" tar
	     ((:url . "http://www.gnu.org/software/hyperbole")
	      (:keywords "comm" "convenience" "files" "frames" "hypermedia" "languages" "mail" "matching" "mouse" "multimedia" "outlines" "tools" "wp")
	      (:maintainer "Bob Weiner <rsw@gnu.org>, Mats Lidell" . "matsl@gnu.org")
	      (:authors
	       ("Bob Weiner")))])
 (ioccur .
	 [(2 4)
	  nil "Incremental occur" single
	  ((:authors
	    ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))
	   (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com")
	   (:url . "https://github.com/thierryvolpiatto/ioccur"))])
 (iterators .
	    [(0 1 1)
	     ((emacs
	       (25)))
	     "Functions for working with iterators" single
	     ((:url . "http://elpa.gnu.org/packages/iterators.html")
	      (:authors
	       ("Michael Heerdegen" . "michael_heerdegen@web.de"))
	      (:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de")
	      (:keywords "extensions" "elisp"))])
 (ivy .
      [(0 12 0)
       ((emacs
	 (24 1)))
       "Incremental Vertical completYon" tar
       ((:url . "https://github.com/abo-abo/swiper")
	(:keywords "matching")
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com")))])
 (ivy-explorer .
	       [(0 3 2)
		((emacs
		  (25))
		 (ivy
		  (0 10 0)))
		"Dynamic file browsing grid using ivy" single
		((:authors
		  ("Clemens Radermacher" . "clemera@posteo.net"))
		 (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
		 (:keywords "convenience" "files" "matching")
		 (:url . "https://github.com/clemera/ivy-explorer"))])
 (javaimp .
	  [(0 6 1)
	   nil "Add and reorder Java import statements in Maven projects" tar
	   ((:keywords "java" "maven" "programming")
	    (:maintainer "Filipp Gunbin" . "fgunbin@fastmail.fm")
	    (:authors
	     ("Filipp Gunbin" . "fgunbin@fastmail.fm"))
	    (:url . "http://elpa.gnu.org/packages/javaimp.html"))])
 (jgraph-mode .
	      [(1 1)
	       ((cl-lib
		 (0 5)))
	       "Major mode for Jgraph files" single
	       ((:url . "http://elpa.gnu.org/packages/jgraph-mode.html")
		(:authors
		 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		(:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
		(:keywords "tex" "wp"))])
 (js2-mode .
	   [(20190219)
	    ((emacs
	      (24 1))
	     (cl-lib
	      (0 5)))
	    "Improved JavaScript editing mode" tar
	    ((:url . "https://github.com/mooz/js2-mode/")
	     (:keywords "languages" "javascript")
	     (:maintainer "Steve Yegge" . "steve.yegge@gmail.com")
	     (:authors
	      ("Steve Yegge" . "steve.yegge@gmail.com")
	      ("mooz" . "stillpedant@gmail.com")
	      ("Dmitry Gutov" . "dgutov@yandex.ru")))])
 (json-mode .
	    [(0 1)
	     ((emacs
	       (25 1)))
	     "Major mode for editing JSON files" single
	     ((:url . "http://elpa.gnu.org/packages/json-mode.html")
	      (:authors
	       ("Simen Heggestøyl" . "simenheg@gmail.com"))
	      (:maintainer "Simen Heggestøyl" . "simenheg@gmail.com")
	      (:keywords "data"))])
 (jsonrpc .
	  [(1 0 7)
	   ((emacs
	     (25 2)))
	   "JSON-RPC library" single
	   ((:url . "http://elpa.gnu.org/packages/jsonrpc.html")
	    (:authors
	     ("João Távora" . "joaotavora@gmail.com"))
	    (:maintainer "João Távora" . "joaotavora@gmail.com")
	    (:keywords "processes" "languages" "extensions"))])
 (jumpc .
	[(3 0)
	 nil "jump to previous insertion points" single
	 ((:url . "http://elpa.gnu.org/packages/jumpc.html")
	  (:authors
	   ("Ivan Kanis" . "ivan@kanis.fr"))
	  (:maintainer "Ivan Kanis" . "ivan@kanis.fr"))])
 (kmb .
      [(0 1)
       ((emacs
	 (24 1)))
       "Kill buffers matching a regexp w/o confirmation" single
       ((:url . "http://elpa.gnu.org/packages/kmb.html")
	(:authors
	 ("Tino Calancha" . "tino.calancha@gmail.com"))
	(:maintainer "Tino Calancha")
	(:keywords "lisp" "convenience"))])
 (landmark .
	   [(1 0)
	    nil "Neural-network robot that learns landmarks" single
	    ((:url . "http://elpa.gnu.org/packages/landmark.html")
	     (:authors
	      ("Terrence Brannon" . "metaperl@gmail.com"))
	     (:maintainer nil . "emacs-devel@gnu.org")
	     (:keywords "games" "neural network" "adaptive search" "chemotaxis"))])
 (let-alist .
   [(1 0 6)
    ((emacs
      (24 1)))
    "Easily let-bind values of an assoc-list by their names" single
    ((:url . "http://elpa.gnu.org/packages/let-alist.html")
     (:authors
      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
     (:keywords "extensions" "lisp"))])
 (lex .
      [(1 1)
       nil "Lexical analyser construction" tar
       ((:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	(:authors
	 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	(:url . "http://elpa.gnu.org/packages/lex.html"))])
 (lmc .
      [(1 4)
       ((emacs
	 (24))
	(cl-lib
	 (0 5)))
       "Little Man Computer in Elisp" single
       ((:url . "http://elpa.gnu.org/packages/lmc.html")
	(:authors
	 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	(:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (load-dir .
	   [(0 0 5)
	    ((cl-lib
	      (0 5)))
	    "Load all Emacs Lisp files in a given directory" single
	    ((:url . "http://elpa.gnu.org/packages/load-dir.html")
	     (:maintainer "Teodor Zlatanov" . "tzz@lifelogs.com")
	     (:keywords "lisp" "files" "convenience"))])
 (load-relative .
		[(1 3 1)
		 nil "Relative file load (within a multi-file Emacs package)" single
		 ((:authors
		   ("Rocky Bernstein" . "rocky@gnu.org"))
		  (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		  (:keywords "internal")
		  (:url . "http://github.com/rocky/emacs-load-relative"))])
 (loc-changes .
	      [(1 2)
	       nil "keep track of positions even after buffer changes" single
	       ((:authors
		 ("Rocky Bernstein" . "rocky@gnu.org"))
		(:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		(:url . "http://github.com/rocky/emacs-loc-changes"))])
 (loccur .
	 [(1 2 3)
	  ((cl-lib
	    (0)))
	  "Perform an occur-like folding in current buffer" single
	  ((:authors
	    ("Alexey Veretennikov" . "alexey.veretennikov@gmail.com"))
	   (:maintainer "Alexey Veretennikov" . "alexey.veretennikov@gmail.com")
	   (:keywords "matching")
	   (:url . "https://github.com/fourier/loccur"))])
 (map .
      [(2 0)
       ((emacs
	 (25)))
       "Map manipulation functions" single
       ((:url . "http://elpa.gnu.org/packages/map.html")
	(:authors
	 ("Nicolas Petton" . "nicolas@petton.fr"))
	(:maintainer nil . "emacs-devel@gnu.org")
	(:keywords "convenience" "map" "hash-table" "alist" "array"))])
 (markchars .
	    [(0 2 1)
	     nil "Mark chars fitting certain characteristics" single
	     ((:url . "http://elpa.gnu.org/packages/markchars.html")
	      (:authors
	       ("Lennart Borgman" . "lennart.borgman@gmail.com"))
	      (:maintainer "Lennart Borgman" . "lennart.borgman@gmail.com"))])
 (math-symbol-lists .
		    [(1 2 1)
		     nil "Lists of Unicode math symbols and latex commands" single
		     ((:authors
		       ("Vitalie Spinu" . "spinuvit@gmail.com"))
		      (:maintainer "Vitalie Spinu" . "spinuvit@gmail.com")
		      (:keywords "unicode" "symbols" "mathematics")
		      (:url . "https://github.com/vspinu/math-symbol-lists"))])
 (memory-usage .
	       [(0 2)
		nil "Analyze the memory usage of Emacs in various ways" single
		((:url . "http://elpa.gnu.org/packages/memory-usage.html")
		 (:authors
		  ("Stefan Monnier" . "monnier@cs.yale.edu"))
		 (:maintainer "Stefan Monnier" . "monnier@cs.yale.edu")
		 (:keywords "maint"))])
 (metar .
	[(0 3)
	 ((cl-lib
	   (0 5)))
	 "Retrieve and decode METAR weather information" single
	 ((:url . "http://elpa.gnu.org/packages/metar.html")
	  (:authors
	   ("Mario Lang" . "mlang@delysid.org"))
	  (:maintainer "Mario Lang" . "mlang@delysid.org")
	  (:keywords "comm"))])
 (midi-kbd .
	   [(0 2)
	    ((emacs
	      (25)))
	    "Create keyboard events from Midi input" single
	    ((:url . "http://elpa.gnu.org/packages/midi-kbd.html")
	     (:authors
	      ("David Kastrup" . "dak@gnu.org"))
	     (:maintainer "David Kastrup" . "dak@gnu.org")
	     (:keywords "convenience" "hardware" "multimedia"))])
 (mines .
	[(1 6)
	 ((emacs
	   (24 4))
	  (cl-lib
	   (0 5)))
	 "Minesweeper game" tar
	 ((:url . "https://github.com/calancha/Minesweeper")
	  (:keywords "games")
	  (:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
	  (:authors
	   ("Tino Calancha" . "tino.calancha@gmail.com")))])
 (minibuffer-line .
		  [(0 1)
		   nil "Display status info in the minibuffer window" single
		   ((:url . "http://elpa.gnu.org/packages/minibuffer-line.html")
		    (:authors
		     ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		    (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (minimap .
	  [(1 2)
	   nil "Sidebar showing a \"mini-map\" of a buffer" single
	   ((:url . "http://elpa.gnu.org/packages/minimap.html")
	    (:authors
	     ("David Engster" . "deng@randomsample.de"))
	    (:maintainer "David Engster" . "deng@randomsample.de"))])
 (mmm-mode .
	   [(0 5 7)
	    ((cl-lib
	      (0 2)))
	    "Allow Multiple Major Modes in a buffer" tar
	    ((:url . "https://github.com/purcell/mmm-mode")
	     (:keywords "convenience" "faces" "languages" "tools")
	     (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	     (:authors
	      ("Michael Abraham Shulman" . "viritrilbia@gmail.com")))])
 (multishell .
	     [(1 1 5)
	      ((cl-lib
		(0 5)))
	      "Easily use multiple shell buffers, local and remote" tar
	      ((:url . "https://github.com/kenmanheimer/EmacsMultishell")
	       (:keywords "processes")
	       (:maintainer "Ken Manheimer" . "ken.manheimer@gmail.com")
	       (:authors
		("Ken Manheimer" . "ken.manheimer@gmail.com")))])
 (muse .
       [(3 20 2)
	nil "Authoring and publishing tool for Emacs" tar
	((:url . "http://mwolson.org/projects/EmacsMuse.html")
	 (:keywords "hypermedia")
	 (:maintainer "Michael Olson" . "mwolson@gnu.org")
	 (:authors
	  ("John Wiegley" . "johnw@gnu.org")))])
 (myers .
	[(0 1)
	 ((emacs
	   (25)))
	 "Random-access singly-linked lists" single
	 ((:url . "http://elpa.gnu.org/packages/myers.html")
	  (:authors
	   ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	  (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	  (:keywords "list" "containers"))])
 (nadvice .
	  [(0 3)
	   nil "Forward compatibility for Emacs-24.4's nadvice" single
	   ((:url . "http://elpa.gnu.org/packages/nadvice.html")
	    (:authors
	     ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	    (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (nameless .
	   [(1 0 2)
	    ((emacs
	      (24 4)))
	    "Hide package namespace in your emacs-lisp code" single
	    ((:authors
	      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	     (:keywords "convenience" "lisp")
	     (:url . "https://github.com/Malabarba/nameless"))])
 (names .
	[(20151201 0)
	 ((emacs
	   (24 1))
	  (cl-lib
	   (0 5))
	  (nadvice
	   (0 3)))
	 "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar
	 ((:url . "https://github.com/Malabarba/names")
	  (:keywords "extensions" "lisp")
	  (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	  (:authors
	   ("Artur Malabarba" . "emacs@endlessparentheses.com")))])
 (nhexl-mode .
	     [(1 3)
	      ((emacs
		(24 4))
	       (cl-lib
		(0 5)))
	      "Minor mode to edit files via hex-dump format" single
	      ((:url . "http://elpa.gnu.org/packages/nhexl-mode.html")
	       (:authors
		("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	       (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	       (:keywords "data"))])
 (nlinum .
	 [(1 9)
	  nil "Show line numbers in the margin" single
	  ((:url . "http://elpa.gnu.org/packages/nlinum.html")
	   (:authors
	    ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	   (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	   (:keywords "convenience"))])
 (notes-mode .
	     [(1 30)
	      nil "Indexing system for on-line note-taking" tar
	      ((:maintainer nil . "<johnh@isi.edu>.")
	       (:authors
		(nil . "<johnh@isi.edu>."))
	       (:url . "http://elpa.gnu.org/packages/notes-mode.html"))])
 (ntlm .
       [(2 1 0)
	nil "NTLM (NT LanManager) authentication support" single
	((:url . "http://elpa.gnu.org/packages/ntlm.html")
	 (:authors
	  ("Taro Kawagishi" . "tarok@transpulse.org"))
	 (:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org")
	 (:keywords "ntlm" "sasl" "comm"))])
 (num3-mode .
	    [(1 3)
	     nil "highlight groups of digits in long numbers" single
	     ((:url . "http://elpa.gnu.org/packages/num3-mode.html")
	      (:authors
	       ("Felix Lee <felix8a@gmail.com>, Michal Nazarewicz" . "mina86@mina86.com"))
	      (:maintainer "Michal Nazarewicz" . "mina86@mina86.com")
	      (:keywords "faces" "minor-mode"))])
 (oauth2 .
	 [(0 11)
	  nil "OAuth 2.0 Authorization Protocol" single
	  ((:url . "http://elpa.gnu.org/packages/oauth2.html")
	   (:authors
	    ("Julien Danjou" . "julien@danjou.info"))
	   (:maintainer "Julien Danjou" . "julien@danjou.info")
	   (:keywords "comm"))])
 (objed .
	[(0 8 1)
	 ((emacs
	   (25))
	  (cl-lib
	   (0 5)))
	 "Navigate and edit text objects." tar
	 ((:url . "https://github.com/clemera/objed")
	  (:keywords "convenience")
	  (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
	  (:authors
	   ("Clemens Radermacher" . "clemera@posteo.net")))])
 (olivetti .
	   [(1 7 1)
	    ((emacs
	      (24 5)))
	    "Minor mode for a nice writing environment" single
	    ((:url . "http://elpa.gnu.org/packages/olivetti.html")
	     (:authors
	      ("Paul W. Rankin" . "pwr@sdf.org"))
	     (:maintainer "Paul W. Rankin" . "pwr@sdf.org")
	     (:keywords "wp" "text"))])
 (omn-mode .
	   [(1 2)
	    nil "Support for OWL Manchester Notation" single
	    ((:url . "http://elpa.gnu.org/packages/omn-mode.html")
	     (:authors
	      ("Phillip Lord" . "phillip.lord@newcastle.ac.uk"))
	     (:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk"))])
 (on-screen .
	    [(1 3 3)
	     ((cl-lib
	       (0)))
	     "guide your eyes while scrolling" single
	     ((:authors
	       ("Michael Heerdegen" . "michael_heerdegen@web.de"))
	      (:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de")
	      (:keywords "convenience")
	      (:url . "https://github.com/michael-heerdegen/on-screen.el"))])
 (org .
      [(9 2 5)
       nil "Outline-based notes management and organizer" tar
       ((:url . "https://orgmode.org")
	(:keywords "outlines" "hypermedia" "calendar" "wp")
	(:maintainer "Carsten Dominik <carsten at orgmode dot org>")
	(:authors
	 ("Carsten Dominik <carsten at orgmode dot org>")))])
 (org-edna .
	   [(1 0 2)
	    ((emacs
	      (25 1))
	     (seq
	      (2 19))
	     (org
	      (9 0 5)))
	    "Extensible Dependencies 'N' Actions" tar
	    ((:url . "https://savannah.nongnu.org/projects/org-edna-el/")
	     (:keywords "convenience" "text" "org")
	     (:maintainer "Ian Dunn" . "dunni@gnu.org")
	     (:authors
	      ("Ian Dunn" . "dunni@gnu.org")))])
 (orgalist .
	   [(1 9)
	    ((emacs
	      (24 4)))
	    "Manage Org-like lists in non-Org buffers" single
	    ((:url . "http://elpa.gnu.org/packages/orgalist.html")
	     (:authors
	      ("Nicolas Goaziou" . "mail@nicolasgoaziou.fr"))
	     (:maintainer "Nicolas Goaziou" . "mail@nicolasgoaziou.fr")
	     (:keywords "convenience"))])
 (osc .
      [(0 1)
       nil "Open Sound Control protocol library" single
       ((:url . "http://elpa.gnu.org/packages/osc.html")
	(:authors
	 ("Mario Lang" . "mlang@delysid.org"))
	(:maintainer "Mario Lang" . "mlang@delysid.org")
	(:keywords "comm" "processes" "multimedia"))])
 (other-frame-window .
		     [(1 0 6)
		      ((emacs
			(24 4)))
		      "Minor mode to enable global prefix keys for other frame/window buffer placement" single
		      ((:url . "http://elpa.gnu.org/packages/other-frame-window.html")
		       (:authors
			("Stephen Leake" . "stephen_leake@member.fsf.org"))
		       (:maintainer "Stephen Leake" . "stephen_leake@member.fsf.org")
		       (:keywords "frame" "window"))])
 (pabbrev .
	  [(4 2 1)
	   nil "Predictive abbreviation expansion" single
	   ((:url . "http://elpa.gnu.org/packages/pabbrev.html")
	    (:authors
	     ("Phillip Lord" . "phillip.lord@newcastle.ac.uk"))
	    (:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk"))])
 (paced .
	[(1 1 3)
	 ((emacs
	   (25 1))
	  (async
	   (1 9 1)))
	 "Predictive Abbreviation Completion and Expansion using Dictionaries" tar
	 ((:url . "https://savannah.nongnu.org/projects/paced-el/")
	  (:keywords "convenience" "completion")
	  (:maintainer "Ian Dunn" . "dunni@gnu.org")
	  (:authors
	   ("Ian Dunn" . "dunni@gnu.org")))])
 (parsec .
	 [(0 1 3)
	  ((emacs
	    (24))
	   (cl-lib
	    (0 5)))
	  "Parser combinator library" tar
	  ((:url . "https://github.com/cute-jumper/parsec.el")
	   (:keywords "extensions")
	   (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com")
	   (:authors
	    ("Junpeng Qiu" . "qjpchmail@gmail.com")))])
 (path-iterator .
		[(1 0)
		 ((emacs
		   (25 0)))
		 "An iterator for traversing a directory path." tar
		 ((:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
		  (:authors
		   ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
		  (:url . "http://elpa.gnu.org/packages/path-iterator.html"))])
 (peg .
      [(1 0)
       ((emacs
	 (25)))
       "Parsing Expression Grammars in Emacs Lisp" tar
       ((:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	(:authors
	 ("Helmut Eller" . "eller.helmut@gmail.com"))
	(:url . "http://elpa.gnu.org/packages/peg.html"))])
 (persist .
	  [(0 4)
	   nil "Persist Variables between Emacs Sessions" tar
	   ((:maintainer "Phillip Lord" . "phillip.lord@russet.org.uk")
	    (:authors
	     ("Phillip Lord" . "phillip.lord@russet.org.uk"))
	    (:url . "http://elpa.gnu.org/packages/persist.html"))])
 (phps-mode .
	    [(0 2 8)
	     ((emacs
	       (26)))
	     "Major mode for PHP with Semantic integration" tar
	     ((:url . "https://github.com/cjohansson/emacs-phps-mode")
	      (:keywords "tools" "convenience")
	      (:maintainer "Christian Johansson" . "christian@cvj.se")
	      (:authors
	       ("Christian Johansson" . "christian@cvj.se")))])
 (pinentry .
	   [(0 1)
	    nil "GnuPG Pinentry server implementation" single
	    ((:url . "http://elpa.gnu.org/packages/pinentry.html")
	     (:authors
	      ("Daiki Ueno" . "ueno@gnu.org"))
	     (:maintainer "Daiki Ueno" . "ueno@gnu.org")
	     (:keywords "gnupg"))])
 (poker .
	[(0 2)
	 nil "Texas hold 'em poker" single
	 ((:url . "http://elpa.gnu.org/packages/poker.html")
	  (:authors
	   ("Mario Lang" . "mlang@delysid.org"))
	  (:maintainer "Mario Lang" . "mlang@delysid.org")
	  (:keywords "games"))])
 (posframe .
	   [(0 5 0)
	    ((emacs
	      (26)))
	    "Pop a posframe (just a frame) at point" single
	    ((:authors
	      ("Feng Shu" . "tumashu@163.com"))
	     (:maintainer "Feng Shu" . "tumashu@163.com")
	     (:keywords "tooltip")
	     (:url . "https://github.com/tumashu/posframe"))])
 (psgml .
	[(1 3 4)
	 nil "SGML-editing mode with parsing support" tar
	 ((:keywords "languages")
	  (:maintainer "Lennart Staflin" . "lstaflin@gmail.com")
	  (:authors
	   ("Lennart Staflin" . "lenst@lysator.liu.se")
	   ("James Clark" . "jjc@clark.com"))
	  (:url . "http://elpa.gnu.org/packages/psgml.html"))])
 (python .
	 [(0 26 1)
	  ((emacs
	    (24 1))
	   (cl-lib
	    (1 0)))
	  "Python's flying circus support for Emacs" single
	  ((:authors
	    ("Fabián E. Gallina" . "fgallina@gnu.org"))
	   (:maintainer nil . "emacs-devel@gnu.org")
	   (:keywords "languages")
	   (:url . "https://github.com/fgallina/python.el"))])
 (quarter-plane .
		[(0 1)
		 nil "Minor mode for quarter-plane style editing" single
		 ((:url . "http://elpa.gnu.org/packages/quarter-plane.html")
		  (:authors
		   ("Peter J. Weisberg"))
		  (:maintainer "Peter J. Weisberg")
		  (:keywords "convenience" "wp"))])
 (queue .
	[(0 2)
	 nil "Queue data structure" single
	 ((:authors
	   ("Inge Wallin" . "inge@lysator.liu.se")
	   ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	  (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	  (:keywords "extensions" "data structures" "queue")
	  (:url . "http://www.dr-qubit.org/emacs.php"))])
 (rainbow-mode .
	       [(1 0 1)
		nil "Colorize color names in buffers" single
		((:url . "http://elpa.gnu.org/packages/rainbow-mode.html")
		 (:authors
		  ("Julien Danjou" . "julien@danjou.info"))
		 (:maintainer "Julien Danjou" . "julien@danjou.info")
		 (:keywords "faces"))])
 (rbit .
       [(0 1)
	nil "Red-black persistent interval trees" single
	((:url . "http://elpa.gnu.org/packages/rbit.html")
	 (:authors
	  ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	 (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	 (:keywords "data structures" "binary tree" "intervals"))])
 (rcirc-color .
	      [(0 4 1)
	       ((emacs
		 (24 4)))
	       "color nicks" single
	       ((:url . "http://elpa.gnu.org/packages/rcirc-color.html")
		(:authors
		 ("Alex Schroeder" . "alex@gnu.org"))
		(:maintainer "Alex Schroeder" . "alex@gnu.org")
		(:keywords "comm"))])
 (rcirc-menu .
	     [(1 1)
	      nil "A menu of all your rcirc connections" single
	      ((:url . "http://elpa.gnu.org/packages/rcirc-menu.html")
	       (:authors
		("Alex Schroeder" . "alex@gnu.org"))
	       (:maintainer "Alex Schroeder" . "alex@gnu.org")
	       (:keywords "comm"))])
 (realgud .
	  [(1 5 1)
	   ((load-relative
	     (1 3 1))
	    (loc-changes
	     (1 2))
	    (test-simple
	     (1 3 0))
	    (emacs
	     (25)))
	   "A modular front-end for interacting with external debuggers" tar
	   ((:url . "http://github.com/realgud/realgud/")
	    (:keywords "debugger" "gdb" "python" "perl" "go" "bash" "zsh" "bashdb" "zshdb" "remake" "trepan" "perldb" "pdb")
	    (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
	    (:authors
	     ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-ipdb .
	       [(1 0 0)
		((realgud
		  (1 5 0))
		 (load-relative
		  (1 3 1))
		 (emacs
		  (25)))
		"Realgud front-end to ipdb" tar
		((:url . "http://github.com/rocky/realgud-ipdb")
		 (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		 (:authors
		  ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-jdb .
	      [(1 0 0)
	       ((realgud
		 (1 4 5))
		(load-relative
		 (1 2))
		(cl-lib
		 (0 5))
		(emacs
		 (25)))
	       "Realgud front-end to Java's jdb debugger\"" tar
	       ((:url . "http://github.com/realgud/realgud-jdb")
		(:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		(:authors
		 ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-lldb .
	       [(1 0 2)
		((load-relative
		  (1 3 1))
		 (realgud
		  (1 5 0))
		 (emacs
		  (25)))
		"Realgud front-end to lldb" tar
		((:url . "http://github.com/realgud/realgud-lldb")
		 (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		 (:authors
		  ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-node-debug .
		     [(1 0 0)
		      ((realgud
			(1 4 5))
		       (load-relative
			(1 2))
		       (cl-lib
			(0 5))
		       (emacs
			(25)))
		      "Realgud front-end to older \"node debug\"" tar
		      ((:url . "http://github.com/realgud/realgud-node-debug")
		       (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		       (:authors
			("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-node-inspect .
		       [(1 0 0)
			((realgud
			  (1 4 5))
			 (load-relative
			  (1 2))
			 (cl-lib
			  (0 5))
			 (emacs
			  (24)))
			"Realgud front-end to newer \"node inspect\"" tar
			((:url . "http://github.com/realgud/realgud-node-inspect")
			 (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
			 (:authors
			  ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-trepan-ni .
		    [(1 0 1)
		     ((load-relative
		       (1 2))
		      (realgud
		       (1 5 0))
		      (cl-lib
		       (0 5))
		      (emacs
		       (25)))
		     "Realgud front-end to trepan-ni" tar
		     ((:url . "http://github.com/realgud/realgud-trepan-ni")
		      (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		      (:authors
		       ("Rocky Bernstein" . "rocky@gnu.org")))])
 (register-list .
		[(0 1)
		 nil "Interactively list/edit registers" single
		 ((:url . "http://elpa.gnu.org/packages/register-list.html")
		  (:authors
		   ("Bastien Guerry" . "bzg@gnu.org"))
		  (:maintainer "Bastien Guerry" . "bzg@gnu.org")
		  (:keywords "register"))])
 (relint .
	 [(1 8)
	  ((xr
	    (1 12)))
	  "Elisp regexp mistake finder" single
	  ((:authors
	    ("Mattias Engdegård" . "mattiase@acm.org"))
	   (:maintainer "Mattias Engdegård" . "mattiase@acm.org")
	   (:keywords "lisp" "maint" "regexps")
	   (:url . "https://github.com/mattiase/relint"))])
 (rich-minority .
		[(1 0 1)
		 ((cl-lib
		   (0 5)))
		 "Clean-up and Beautify the list of minor-modes." single
		 ((:authors
		   ("Artur Malabarba" . "emacs@endlessparentheses.com"))
		  (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
		  (:keywords "mode-line" "faces")
		  (:url . "https://github.com/Malabarba/rich-minority"))])
 (rnc-mode .
	   [(0 2)
	    nil "Emacs mode to edit Relax-NG Compact files" single
	    ((:url . "http://elpa.gnu.org/packages/rnc-mode.html")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	     (:keywords "xml" "relaxng"))])
 (rudel .
	[(0 3 1)
	 ((emacs
	   (24))
	  (cl-lib
	   (0 5))
	  (cl-generic
	   (0 3))
	  (cl-print
	   (1 0)))
	 "A collaborative editing framework for Emacs" tar
	 ((:url . "http://rudel.sourceforge.net/")
	  (:keywords "rudel" "collaboration")
	  (:maintainer "Jan Moringen" . "scymtym@users.sourceforge.net")
	  (:authors
	   ("Jan Moringen" . "scymtym@users.sourceforge.net")))])
 (scroll-restore .
		 [(1 0)
		  nil "restore original position after scrolling" single
		  ((:url . "http://elpa.gnu.org/packages/scroll-restore.html")
		   (:authors
		    ("Martin Rudalics" . "rudalics@gmx.at"))
		   (:maintainer "Martin Rudalics" . "rudalics@gmx.at")
		   (:keywords "scrolling"))])
 (sed-mode .
	   [(1 0)
	    nil "Major mode to edit sed scripts" single
	    ((:url . "http://elpa.gnu.org/packages/sed-mode.html")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (seq .
      [(2 20)
       nil "Sequence manipulation functions" tar
       ((:keywords "sequences")
	(:maintainer nil . "emacs-devel@gnu.org")
	(:authors
	 ("Nicolas Petton" . "nicolas@petton.fr"))
	(:url . "http://elpa.gnu.org/packages/seq.html"))])
 (shelisp .
	  [(0 9 1)
	   nil "execute elisp in shell" single
	   ((:url . "http://elpa.gnu.org/packages/shelisp.html")
	    (:authors
	     ("Michael R. Mauger" . "michael@mauger.com"))
	    (:maintainer "Michael R. Mauger" . "michael@mauger.com")
	    (:keywords "terminals" "lisp" "processes"))])
 (shen-mode .
	    [(0 1)
	     nil "A major mode for editing shen source code" tar
	     ((:keywords "languages" "shen")
	      (:maintainer "Eric Schulte" . "schulte.eric@gmail.com")
	      (:authors
	       ("Eric Schulte" . "schulte.eric@gmail.com"))
	      (:url . "http://elpa.gnu.org/packages/shen-mode.html"))])
 (sisu-mode .
	    [(7 1 8)
	     nil "Major mode for SiSU markup text" single
	     ((:authors
	       ("Ralph Amissah & Ambrose Kofi Laing"))
	      (:maintainer "Ralph Amissah" . "ralph.amissah@gmail.com")
	      (:keywords "text" "syntax" "processes" "tools")
	      (:url . "http://www.sisudoc.org/"))])
 (smalltalk-mode .
		 [(3 2 92)
		  nil "Major mode for the GNU Smalltalk programming language" tar
		  ((:maintainer "Derek Zhou" . "derek@shannon-data.com")
		   (:authors
		    ("Steve Byrne"))
		   (:url . "http://elpa.gnu.org/packages/smalltalk-mode.html"))])
 (smart-yank .
	     [(0 1 1)
	      ((emacs
		(24)))
	      "A different approach of yank pointer handling" single
	      ((:url . "http://elpa.gnu.org/packages/smart-yank.html")
	       (:authors
		("Michael Heerdegen" . "michael_heerdegen@web.de"))
	       (:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de")
	       (:keywords "convenience"))])
 (sml-mode .
	   [(6 9)
	    ((emacs
	      (24))
	     (cl-lib
	      (0 5)))
	    "Major mode for editing (Standard) ML" single
	    ((:url . "http://elpa.gnu.org/packages/sml-mode.html")
	     (:authors
	      ("Lars Bo Nielsen")
	      ("	Olin Shivers")
	      ("	Fritz Knabe (?)")
	      ("	Steven Gilmore (?)")
	      ("	Matthew Morley" . "mjm@scs.leeds.ac.uk")
	      ("	Matthias Blume" . "blume@cs.princeton.edu")
	      ("	(Stefan Monnier)" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	     (:keywords "sml"))])
 (soap-client .
	      [(3 1 5)
	       ((cl-lib
		 (0 6 1)))
	       "Access SOAP web services" tar
	       ((:url . "https://github.com/alex-hhh/emacs-soap-client")
		(:keywords "soap" "web-services" "comm" "hypermedia")
		(:maintainer "Alexandru Harsanyi" . "AlexHarsanyi@gmail.com")
		(:authors
		 ("Alexandru Harsanyi" . "AlexHarsanyi@gmail.com")))])
 (sokoban .
	  [(1 4 8)
	   ((emacs
	     (23 1))
	    (cl-lib
	     (0 5)))
	   "Implementation of Sokoban for Emacs." tar
	   ((:keywords "games")
	    (:maintainer "Dieter Deyke" . "dieter.deyke@gmail.com")
	    (:authors
	     ("Glynn Clements" . "glynn.clements@xemacs.org"))
	    (:url . "http://elpa.gnu.org/packages/sokoban.html"))])
 (sotlisp .
	  [(1 6 2)
	   ((emacs
	     (24 1)))
	   "Write lisp at the speed of thought." single
	   ((:authors
	     ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	    (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	    (:keywords "convenience" "lisp")
	    (:url . "https://github.com/Malabarba/speed-of-thought-lisp"))])
 (spinner .
	  [(1 7 3)
	   nil "Add spinners and progress-bars to the mode-line for ongoing operations" single
	   ((:authors
	     ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	    (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	    (:keywords "processes" "mode-line")
	    (:url . "https://github.com/Malabarba/spinner.el"))])
 (sql-indent .
	     [(1 4)
	      ((cl-lib
		(0 5)))
	      "Support for indenting code in SQL files." tar
	      ((:url . "https://github.com/alex-hhh/emacs-sql-indent")
	       (:keywords "languages" "sql")
	       (:maintainer "Alex Harsanyi" . "AlexHarsanyi@gmail.com")
	       (:authors
		("Alex Harsanyi" . "AlexHarsanyi@gmail.com")))])
 (ssh-deploy .
	     [(3 1)
	      ((emacs
		(25)))
	      "Deployment via Tramp, global or per directory." tar
	      ((:url . "https://github.com/cjohansson/emacs-ssh-deploy")
	       (:keywords "tools" "convenience")
	       (:maintainer "Christian Johansson" . "christian@cvj.se")
	       (:authors
		("Christian Johansson" . "christian@cvj.se")))])
 (stream .
	 [(2 2 4)
	  ((emacs
	    (25)))
	  "Implementation of streams" tar
	  ((:keywords "stream" "laziness" "sequences")
	   (:maintainer nil . "nicolas@petton.fr")
	   (:authors
	    ("Nicolas Petton" . "nicolas@petton.fr"))
	   (:url . "http://elpa.gnu.org/packages/stream.html"))])
 (svg .
      [(1 0)
       ((emacs
	 (25)))
       "SVG image creation functions" single
       ((:url . "http://elpa.gnu.org/packages/svg.html")
	(:authors
	 ("Lars Magne Ingebrigtsen" . "larsi@gnus.org")
	 ("Felix E. Klee" . "felix.klee@inka.de"))
	(:maintainer "Lars Magne Ingebrigtsen" . "larsi@gnus.org")
	(:keywords "image"))])
 (svg-clock .
	    [(1 0)
	     ((svg
	       (0 1))
	      (emacs
	       (25 0)))
	     "Analog clock using Scalable Vector Graphics" single
	     ((:url . "http://elpa.gnu.org/packages/svg-clock.html")
	      (:authors
	       ("Ulf Jasper" . "ulf.jasper@web.de"))
	      (:maintainer "Ulf Jasper" . "ulf.jasper@web.de")
	      (:keywords "demo" "svg" "clock"))])
 (system-packages .
		  [(1 0 11)
		   ((emacs
		     (24 3)))
		   "functions to manage system packages" single
		   ((:authors
		     ("J. Alexander Branham" . "alex.branham@gmail.com"))
		    (:maintainer "J. Alexander Branham" . "alex.branham@gmail.com")
		    (:url . "https://gitlab.com/jabranham/system-packages"))])
 (tNFA .
       [(0 1 1)
	((queue
	  (0 1)))
	"Tagged non-deterministic finite-state automata" single
	((:authors
	  ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	 (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	 (:keywords "extensions" "matching" "data structures tnfa" "nfa" "dfa" "finite state automata" "automata" "regexp")
	 (:url . "http://www.dr-qubit.org/emacs.php"))])
 (temp-buffer-browse .
		     [(1 5)
		      ((emacs
			(24)))
		      "temp buffer browse mode" single
		      ((:url . "http://elpa.gnu.org/packages/temp-buffer-browse.html")
		       (:authors
			("Leo Liu" . "sdl.web@gmail.com"))
		       (:maintainer "Leo Liu" . "sdl.web@gmail.com")
		       (:keywords "convenience"))])
 (test-simple .
	      [(1 3 0)
	       ((cl-lib
		 (0)))
	       "Simple Unit Test Framework for Emacs Lisp" single
	       ((:authors
		 ("Rocky Bernstein" . "rocky@gnu.org"))
		(:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		(:keywords "unit-test")
		(:url . "http://github.com/rocky/emacs-test-simple"))])
 (timerfunctions .
		 [(1 4 2)
		  ((cl-lib
		    (0 5)))
		  "Enhanced versions of some timer.el functions" single
		  ((:url . "http://elpa.gnu.org/packages/timerfunctions.html")
		   (:authors
		    ("Dave Goel" . "deego3@gmail.com"))
		   (:maintainer "Dave Goel" . "deego3@gmail.com"))])
 (tiny .
       [(0 2 1)
	nil "Quickly generate linear ranges in Emacs" tar
	((:url . "https://github.com/abo-abo/tiny")
	 (:keywords "convenience")
	 (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	 (:authors
	  ("Oleh Krehel" . "ohwoeowho@gmail.com")))])
 (tramp .
	[(2 4 2 1)
	 ((emacs
	   (24 4)))
	 "Transparent Remote Access, Multiple Protocol" tar
	 ((:url . "https://savannah.gnu.org/projects/tramp")
	  (:keywords "comm" "processes")
	  (:maintainer "Michael Albinus" . "michael.albinus@gmx.de")
	  (:authors
	   ("Kai Großjohann" . "kai.grossjohann@gmx.net")
	   ("Michael Albinus" . "michael.albinus@gmx.de")))])
 (tramp-theme .
	      [(0 2)
	       ((emacs
		 (24 1)))
	       "Custom theme for remote buffers" single
	       ((:url . "http://elpa.gnu.org/packages/tramp-theme.html")
		(:authors
		 ("Michael Albinus" . "michael.albinus@gmx.de"))
		(:maintainer "Michael Albinus" . "michael.albinus@gmx.de")
		(:keywords "convenience" "faces"))])
 (transcribe .
	     [(1 5 2)
	      nil "Package for audio transcriptions" single
	      ((:url . "http://elpa.gnu.org/packages/transcribe.html")
	       (:authors
		("David Gonzalez Gandara" . "dggandara@member.fsf.org"))
	       (:maintainer "David Gonzalez Gandara" . "dggandara@member.fsf.org"))])
 (trie .
       [(0 4)
	((tNFA
	  (0 1 1))
	 (heap
	  (0 3)))
	"Trie data structure" single
	((:authors
	  ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	 (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	 (:keywords "extensions" "matching" "data structures trie" "ternary search tree" "tree" "completion" "regexp")
	 (:url . "http://www.dr-qubit.org/emacs.php"))])
 (undo-tree .
	    [(0 6 5)
	     nil "Treat undo history as a tree" single
	     ((:authors
	       ("Toby Cubitt" . "toby-undo-tree@dr-qubit.org"))
	      (:maintainer "Toby Cubitt" . "toby-undo-tree@dr-qubit.org")
	      (:keywords "convenience" "files" "undo" "redo" "history" "tree")
	      (:url . "http://www.dr-qubit.org/emacs.php"))])
 (uni-confusables .
		  [(0 1)
		   nil "Unicode confusables table" tar
		   ((:maintainer "Teodor Zlatanov" . "tzz@lifelogs.com")
		    (:url . "http://elpa.gnu.org/packages/uni-confusables.html"))])
 (uniquify-files .
		 [(1 0 1)
		  ((emacs
		    (25 0)))
		  "Completion style for files, minimizing directories" tar
		  ((:keywords "completion" "table" "uniquify")
		   (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
		   (:authors
		    ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
		   (:url . "http://elpa.gnu.org/packages/uniquify-files.html"))])
 (url-http-ntlm .
		[(2 0 4)
		 ((cl-lib
		   (0 5))
		  (ntlm
		   (2 1 0)))
		 "NTLM authentication for the url library" single
		 ((:authors
		   ("Tom Schutzer-Weissmann" . "tom.weissmann@gmail.com"))
		  (:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org")
		  (:keywords "comm" "data" "processes" "hypermedia")
		  (:url . "https://code.google.com/p/url-http-ntlm/"))])
 (validate .
	   [(1 0 4)
	    ((emacs
	      (24 1))
	     (cl-lib
	      (0 5))
	     (seq
	      (2 16)))
	    "Schema validation for Emacs-lisp" single
	    ((:url . "http://elpa.gnu.org/packages/validate.html")
	     (:authors
	      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	     (:keywords "lisp"))])
 (vcl-mode .
	   [(1 1)
	    nil "Major mode for Varnish Configuration Language" single
	    ((:url . "http://elpa.gnu.org/packages/vcl-mode.html")
	     (:authors
	      ("Sergey Poznyakoff" . "gray@gnu.org.ua"))
	     (:maintainer "Sergey Poznyakoff" . "gray@gnu.org.ua")
	     (:keywords "varnish" "vcl"))])
 (vdiff .
	[(0 2 3)
	 ((emacs
	   (24 4))
	  (hydra
	   (0 13 0)))
	 "A diff tool similar to  vimdiff" single
	 ((:authors
	   ("Justin Burkett" . "justin@burkett.cc"))
	  (:maintainer "Justin Burkett" . "justin@burkett.cc")
	  (:keywords "diff")
	  (:url . "https://github.com/justbur/emacs-vdiff"))])
 (verilog-mode .
	       [(2019 6 21 103209889)
		nil "major mode for editing verilog source in Emacs" single
		((:authors
		  ("Michael McNamara" . "mac@verilog.com")
		  ("Wilson Snyder" . "wsnyder@wsnyder.org"))
		 (:maintainer "Michael McNamara" . "mac@verilog.com")
		 (:keywords "languages")
		 (:url . "http://www.veripool.org"))])
 (vigenere .
	   [(1 0)
	    ((emacs
	      (25 1)))
	    "Run a vigenere cipher on a block of text ;" single
	    ((:authors
	      ("Ian Dunn" . "dunni@gnu.org"))
	     (:maintainer "Ian Dunn" . "dunni@gnu.org")
	     (:keywords "data" "vigenere" "cipher")
	     (:url . "https://elpa.gnu.org/packages/vigenere.html"))])
 (visual-filename-abbrev .
			 [(1 0)
			  ((emacs
			    (26 1)))
			  "Visually abbreviate filenames" single
			  ((:url . "http://elpa.gnu.org/packages/visual-filename-abbrev.html")
			   (:authors
			    ("Tassilo Horn" . "tsdh@gnu.org"))
			   (:maintainer "Tassilo Horn" . "tsdh@gnu.org")
			   (:keywords "tools"))])
 (visual-fill .
	      [(0 1)
	       nil "Auto-refill paragraphs without modifying the buffer" single
	       ((:url . "http://elpa.gnu.org/packages/visual-fill.html")
		(:authors
		 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		(:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (vlf .
      [(1 7 1)
       nil "View Large Files" tar
       ((:url . "https://github.com/m00natic/vlfi")
	(:keywords "large files" "utilities")
	(:maintainer "Andrey Kotlarski" . "m00naticus@gmail.com"))])
 (w3 .
     [(4 0 49)
      nil "Fully customizable, largely undocumented web browser for Emacs" tar
      ((:keywords "faces" "help" "comm" "news" "mail" "processes" "mouse" "hypermedia")
       (:maintainer "William Perry and many more")
       (:authors
	("William Perry and many more"))
       (:url . "http://elpa.gnu.org/packages/w3.html"))])
 (wcheck-mode .
	      [(2019 6 17)
	       nil "General interface for text checkers" single
	       ((:authors
		 ("Teemu Likonen" . "tlikonen@iki.fi"))
		(:maintainer "Teemu Likonen" . "tlikonen@iki.fi")
		(:keywords "text" "spell" "check" "languages" "ispell")
		(:url . "https://github.com/tlikonen/wcheck-mode"))])
 (wconf .
	[(0 2 1)
	 ((emacs
	   (24 4)))
	 "Minimal window layout manager" single
	 ((:authors
	   ("Ingo Lohmar" . "i.lohmar@gmail.com"))
	  (:maintainer "Ingo Lohmar" . "i.lohmar@gmail.com")
	  (:keywords "windows" "frames" "layout")
	  (:url . "https://github.com/ilohmar/wconf"))])
 (web-server .
	     [(0 1 1)
	      ((emacs
		(24 3)))
	      "Emacs Web Server" tar
	      ((:url . "https://github.com/eschulte/emacs-web-server")
	       (:keywords "http" "server" "network")
	       (:maintainer "Eric Schulte" . "schulte.eric@gmail.com")
	       (:authors
		("Eric Schulte" . "schulte.eric@gmail.com")))])
 (webfeeder .
	    [(1 0 0)
	     ((emacs
	       (25 1)))
	     "Build RSS and Atom webfeeds from HTML files" tar
	     ((:url . "https://gitlab.com/Ambrevar/emacs-webfeeder")
	      (:keywords "news" "hypermedia" "blog" "feed" "rss" "atom")
	      (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz")
	      (:authors
	       ("Pierre Neidhardt" . "mail@ambrevar.xyz")))])
 (websocket .
	    [(1 11 1)
	     ((cl-lib
	       (0 5)))
	     "Emacs WebSocket client and server" tar
	     ((:keywords "communication" "websocket" "server")
	      (:maintainer "Andrew Hyatt" . "ahyatt@gmail.com")
	      (:authors
	       ("Andrew Hyatt" . "ahyatt@gmail.com"))
	      (:url . "http://elpa.gnu.org/packages/websocket.html"))])
 (which-key .
	    [(3 3 0)
	     ((emacs
	       (24 4)))
	     "Display available keybindings in popup" tar
	     ((:url . "https://github.com/justbur/emacs-which-key")
	      (:maintainer "Justin Burkett" . "justin@burkett.cc")
	      (:authors
	       ("Justin Burkett" . "justin@burkett.cc")))])
 (windresize .
	     [(0 1)
	      nil "Resize windows interactively" single
	      ((:url . "http://elpa.gnu.org/packages/windresize.html")
	       (:authors
		("Bastien" . "bzg@gnu.org"))
	       (:maintainer "Bastien" . "bzg@gnu.org")
	       (:keywords "window"))])
 (wisi .
       [(2 2 1)
	((emacs
	  (25 0))
	 (seq
	  (2 20)))
	"Utilities for implementing an indentation/navigation engine using a generalized LALR parser" tar
	((:url . "http://stephe-leake.org/ada/wisitoken.html")
	 (:keywords "parser" "indentation" "navigation")
	 (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
	 (:authors
	  ("Stephen Leake" . "stephen_leake@stephe-leake.org")))])
 (wisitoken-grammar-mode .
			 [(1 0 3)
			  ((wisi
			    (2 2 1))
			   (emacs
			    (25 0))
			   (mmm-mode
			    (0 5 7)))
			  "Major mode for editing WisiToken grammar files" tar
			  ((:keywords "languages")
			   (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
			   (:authors
			    ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
			   (:url . "http://elpa.gnu.org/packages/wisitoken-grammar-mode.html"))])
 (wpuzzle .
	  [(1 1)
	   nil "find as many word in a given time" single
	   ((:url . "http://elpa.gnu.org/packages/wpuzzle.html")
	    (:authors
	     ("Ivan Kanis" . "ivan@kanis.fr"))
	    (:maintainer "Ivan Kanis" . "ivan@kanis.fr"))])
 (xclip .
	[(1 9)
	 nil "Copy&paste GUI clipboard from text terminal" single
	 ((:url . "http://elpa.gnu.org/packages/xclip.html")
	  (:authors
	   ("Leo Liu" . "sdl.web@gmail.com"))
	  (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	  (:keywords "convenience" "tools"))])
 (xelb .
       [(0 17)
	((emacs
	  (24 4))
	 (cl-generic
	  (0 2)))
	"X protocol Emacs Lisp Binding" tar
	((:url . "https://github.com/ch11ng/xelb")
	 (:keywords "unix")
	 (:maintainer "Chris Feng" . "chris.w.feng@gmail.com")
	 (:authors
	  ("Chris Feng" . "chris.w.feng@gmail.com")))])
 (xpm .
      [(1 0 4)
       nil "edit XPM images" tar
       ((:url . "http://www.gnuvola.org/software/xpm/")
	(:keywords "multimedia" "xpm")
	(:maintainer "Thien-Thi Nguyen" . "ttn@gnu.org")
	(:authors
	 ("Thien-Thi Nguyen" . "ttn@gnu.org")))])
 (yasnippet .
	    [(0 13 0)
	     ((cl-lib
	       (0 5)))
	     "Yet another snippet extension for Emacs" tar
	     ((:url . "http://github.com/joaotavora/yasnippet")
	      (:keywords "convenience" "emulation")
	      (:maintainer "Noam Postavsky" . "npostavs@gmail.com"))])
 (yasnippet-classic-snippets .
			     [(1 0 2)
			      ((yasnippet
				(0 9 1)))
			      "\"Classic\" yasnippet snippets" tar
			      ((:keywords "snippets")
			       (:maintainer "Noam Postavsky" . "npostavs@gmail.com")
			       (:url . "http://elpa.gnu.org/packages/yasnippet-classic-snippets.html"))])
 (zones .
	[(2019 7 13)
	 nil "Zones of text - like multiple regions" single
	 ((:authors
	   ("Drew Adams"))
	  (:maintainer "Drew Adams" . "drew.adams@oracle.com")
	  (:keywords "narrow" "restriction" "widen" "region" "zone")
	  (:url . "https://elpa.gnu.org/packages/zones.html"))])
 (ztree .
	[(1 0 5)
	 ((cl-lib
	   (0)))
	 "Text mode directory tree" tar
	 ((:url . "https://github.com/fourier/ztree")
	  (:keywords "files" "tools")
	  (:maintainer "Alexey Veretennikov" . "alexey.veretennikov@gmail.com")
	  (:authors
	   ("Alexey Veretennikov" . "alexey.veretennikov@gmail.com")))]))
